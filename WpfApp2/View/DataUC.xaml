<UserControl x:Class="WpfApp2.View.DataUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:WpfApp2.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <domain:BindingProxy x:Key="DataContextProxy" Data="{Binding}" xmlns:domain="clr-namespace:WpfApp2.Utils" />
    </UserControl.Resources>
    <ScrollViewer >
        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"></RowDefinition>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                    <Setter Property="Margin" Value="5,2,5,2"/>
                </Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFilledTextBox}">
                    <Setter Property="VerticalAlignment" Value="Top"/>
                    <Setter Property="Margin" Value="5,2,5,2"/>
                </Style>
                <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                    <!--<Setter Property="Margin" Value="5,2,5,2"/>-->
                </Style>
            </Grid.Resources>
            <TabControl Grid.Row="0" Grid.ColumnSpan="2" TabStripPlacement="Top"
                        materialDesign:ColorZoneAssist.Mode="PrimaryMid"
                        Style="{StaticResource MaterialDesignFilledTabControl}">
                <TabItem Header="S">
                    <StackPanel Margin="0,10,0,0">
                    <Grid x:Name="setPanel" Background="White" MaxHeight="280" MaxWidth="300">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ComboBox 
                            materialDesign:HintAssist.Hint="Signal Name" 
                             x:Name="cbbSignals" 
                             DisplayMemberPath="SignalName" 
                             SelectedValuePath="StrValue" 
                             Grid.Row="0" 
                            Grid.ColumnSpan="3"
                             ItemsSource="{Binding DbcSignals}"
                             SelectionChanged="cbbSignals_SelectionChanged"></ComboBox>
                        <TextBox x:Name="tbSelectedValue"
                            VerticalAlignment="Top"
                            AcceptsReturn="True"
                            TextWrapping="Wrap"
                            materialDesign:HintAssist.Hint="Curretn Value"
                            Grid.Row="1" Grid.ColumnSpan="3"/>
                        <Button x:Name="btnReduce" Click="btnSet_Click" Grid.Row="2" Grid.Column="0">
                                <TextBlock Text="-"></TextBlock>
                            </Button>
                        <TextBox  materialDesign:HintAssist.Hint="加减系数" Grid.Row="2" Grid.Column="1"></TextBox>
                        <Button x:Name="btnAdd" Click="btnSet_Click" Grid.Row="2" Grid.Column="2">
                                <TextBlock Text="+"></TextBlock>
                        </Button>
                        <Button x:Name="btnDivid" Click="btnSet_Click" Grid.Row="3" Grid.Column="0">
                                <TextBlock Text="/"></TextBlock>
                            </Button>
                        <TextBox materialDesign:HintAssist.Hint="乘除系数" Grid.Row="3" Grid.Column="1"></TextBox>
                        <Button x:Name="btnMultip" Click="btnSet_Click" Grid.Row="3" Grid.Column="2">
                                <TextBlock Text="*"></TextBlock>
                            </Button>
                        <Button x:Name="btnSet" Click="btnSet_Click" Grid.Row="4" Grid.ColumnSpan="3">
                            <TextBlock Text="Send"></TextBlock>
                        </Button>
                    </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="G" x:Name="gbGet" >
                    <StackPanel 
                        Margin="0,10,0,0"
                        Orientation="Vertical" 
                        x:Name="getPanel" 
                        Grid.RowSpan="2" 
                        Background="White" 
                        MaxWidth="300">
                            <TextBox MinWidth="100" 
                                     Text="{Binding IntervalTime,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     materialDesign:HintAssist.Hint="Interval(ms)"
                                     IsReadOnly="{Binding IsGetData}">
                            </TextBox>
                            <Button x:Name="btnGet" Click="btnGet_Click">
                                <TextBlock>
                                    <TextBlock.Resources>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                            <Setter Property="Text" Value="Start Get"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Data.IsGetData, Source={StaticResource DataContextProxy}}" Value="True">
                                                    <Setter Property="Text" Value="Stop Get Data"/>
                                                    <Setter Property="Foreground" Value="REd"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Resources>
                                </TextBlock>
                            </Button>
                    </StackPanel>
                </TabItem>
                <TabItem Header="R">
                    <StackPanel 
                        Orientation="Vertical" 
                        Margin="0,10,0,0"
                        x:Name="rlPanel" 
                        Background="White" >
                        <Grid MaxWidth="300" MaxHeight="300">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ComboBox 
                                Grid.Row="0" 
                                Grid.ColumnSpan="3"
                                x:Name="cbbRSignal"
                                materialDesign:HintAssist.Hint="Signal Name" 
                                DisplayMemberPath="SignalName" 
                                SelectedValuePath="StrValue" 
                                ItemsSource="{Binding DbcSignals}"></ComboBox>
                            <TextBox
                                Grid.Row="1" Grid.ColumnSpan="3"
                                VerticalAlignment="Top"
                                AcceptsReturn="True"
                                TextWrapping="Wrap"
                                materialDesign:HintAssist.Hint="Curretn Value"
                                Text="{Binding ElementName=cbbRSignal,Path=SelectedValue}"/>
                            <Button 
                                x:Name="btnRLReduce" 
                                Click="btnSet_Click" 
                                Grid.Row="2" 
                                Grid.Column="0">
                                <TextBlock Text="-"></TextBlock>
                            </Button>
                            <TextBox 
                                Grid.Row="2" 
                                Grid.Column="1"  
                                materialDesign:HintAssist.Hint="加减系数" 
                                ></TextBox>
                            <Button 
                                x:Name="btnRLAdd" 
                                Click="btnSet_Click"
                                Grid.Row="2" 
                                Grid.Column="2">
                                <TextBlock Text="+"></TextBlock>
                            </Button>
                            <Button 
                                x:Name="btnRLDivid" 
                                Click="btnSet_Click"
                                Grid.Row="3" 
                                Grid.Column="0">
                                <TextBlock Text="/"></TextBlock>
                            </Button>
                            <TextBox 
                                materialDesign:HintAssist.Hint="乘除系数" 
                                Grid.Row="3" 
                                Grid.Column="1"></TextBox>
                            <Button 
                                x:Name="btnRLMultip" 
                                Click="btnSet_Click"
                                Grid.Row="3" 
                                Grid.Column="2">
                                <TextBlock Text=" *"></TextBlock>
                            </Button>
                            <Button 
                                x:Name="btnRLSet" 
                                Click="btnSet_Click" 
                                Grid.Row="4" 
                                Grid.ColumnSpan="3">
                                <TextBlock Text="Send"></TextBlock>
                            </Button>
                            <Button 
                                x:Name="btnSendRolling" 
                                Click="btnSendRolling_Click" 
                                Grid.Row="5" 
                                Grid.ColumnSpan="3">Start Send</Button>
                        </Grid>
                    </StackPanel>
                    
                </TabItem>
            </TabControl>
            <StackPanel Grid.ColumnSpan="2" Background="AliceBlue" Grid.Row="1" Margin="0,10,0,0">
                <materialDesign:Card materialDesign:ColorZoneAssist.Mode="Custom">
                    <TabControl Style="{StaticResource MaterialDesignFilledTabControl}">
                        <TabItem Header="Data">
                            <DataGrid x:Name="gdData" 
                                      ItemsSource="{Binding DbcSignals}" 
                                      CanUserAddRows="False" 
                                      AutoGenerateColumns="False" 
                                      HeadersVisibility="All">
                                <DataGrid.Columns>
                                    <DataGridCheckBoxColumn
                                      Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"
                                      ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                      EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                                        <DataGridCheckBoxColumn.Header>
                                            <Border
                                            Background="Transparent">
                                                <CheckBox IsChecked="{Binding Data.IsAllSignalsSelected, Source={StaticResource DataContextProxy}}" />
                                            </Border>
                                        </DataGridCheckBoxColumn.Header>
                                        <DataGridCheckBoxColumn.HeaderStyle>
                                            <Style
                                          TargetType="{x:Type DataGridColumnHeader}"
                                          BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                                <Setter
                                                Property="HorizontalContentAlignment"
                                                Value="Center" />
                                            </Style>
                                        </DataGridCheckBoxColumn.HeaderStyle>
                                    </DataGridCheckBoxColumn>
                                    <DataGridTextColumn
                                  Binding="{Binding MessageID}"
                                  Header="MessageID"
                                  ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                  EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" IsReadOnly="True"/>
                                    <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                                    <materialDesign:DataGridTextColumn Header="Name" ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" IsReadOnly="True">
                                        <materialDesign:DataGridTextColumn.Binding>
                                            <Binding Path="SignalName">
                                                <Binding.ValidationRules>
                                                    <domain:NotEmptyValidationRule xmlns:domain="clr-namespace:WpfApp2.Utils" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </materialDesign:DataGridTextColumn.Binding>
                                    </materialDesign:DataGridTextColumn>
                                    <materialDesign:DataGridTextColumn Binding="{Binding DValue}" Header="StrValue"
                                    EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                                        <DataGridTextColumn.HeaderStyle>
                                            <Style TargetType="{x:Type DataGridColumnHeader}"  BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                                <Setter Property="ContentTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <TextBlock
                                                          TextWrapping="Wrap"
                                                          Text="{Binding}"
                                                          TextAlignment="Center" />
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>

                                            </Style>
                                        </DataGridTextColumn.HeaderStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Data.ISReadOnly, Source={StaticResource DataContextProxy}}" Value="True">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </materialDesign:DataGridTextColumn>
                                    <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                                    <!--<materialDesign:DataGridComboBoxColumn
      Header="Food with long header"
      IsEditable="True"
      Width="100"
      SelectedValueBinding="{Binding Food}"
      ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}">
                                    -->
                                    <!--Setting the editing element style allows access to all of the combo box's properties
                      <materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                          <Style TargetType="ComboBox" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ComboBox}, ResourceId=MaterialDataGridComboBoxColumnEditingStyle}}" >
                              <Setter Property="IsEditable" Value="True" />
                          </Style>
                      </materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                      -->
                                    <!--
                                </materialDesign:DataGridComboBoxColumn>-->
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>
                    </TabControl>
                </materialDesign:Card>
            </StackPanel>
        </Grid>
    </ScrollViewer>

</UserControl>
