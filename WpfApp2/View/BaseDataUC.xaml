<UserControl x:Class="WpfApp2.View.BaseDataUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:WpfApp2.View"
             xmlns:utils="clr-namespace:WpfApp2.Utils"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <domain:BindingProxy x:Key="DataContextProxy" Data="{Binding}"  xmlns:domain="clr-namespace:WpfApp2.Utils" />
        <utils:ColorConverter x:Key="ColorConverter"/>
        <utils:MultipColorConverter x:Key="mutColorConverter"/>
        <utils:EnumConverter x:Key="EnumConverter"/>
    </UserControl.Resources>

    <Grid Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignOutlinedComboBox}">
                <Setter Property="Margin" Value="5,2,5,2"/>
            </Style>
            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFilledTextBox}">
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Margin" Value="5,2,5,2"/>
                <!--FontFamily="Champagne &amp; Limousines" FontSize="18"-->
                <!--<Setter Property="FontFamily" Value="Champagne &amp; Limousines"/>-->
                <!--<Setter Property="FontSize" Value="18"/>-->
            </Style>
            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
            </Style>
        </Grid.Resources>
        <TabControl Grid.Row="0" Grid.ColumnSpan="2" TabStripPlacement="Top"
                        materialDesign:ColorZoneAssist.Mode="PrimaryMid"
                        Style="{StaticResource MaterialDesignFilledTabControl}">
            <TabItem x:Name="setTab">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Data.FormItem.Name, Source={StaticResource DataContextProxy}}" Foreground="White" FontSize="16"></TextBlock>
                        <TextBlock Text="{Binding Data.FormItem.FormType, Source={StaticResource DataContextProxy},
                                        StringFormat='(Form Type: \{0\})',
                                        Converter={StaticResource EnumConverter},
                                        ConverterParameter={x:Type utils:FormType}}"
                                   Foreground="White" Margin="10,0,0,0"/>
                    </StackPanel>
                </TabItem.Header>
                <StackPanel Margin="0,10,0,0">
                    <Grid x:Name="setPanel" Background="White" MaxHeight="280" MaxWidth="300">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ComboBox 
                            materialDesign:HintAssist.Hint="Signal Name" 
                             x:Name="cbbSignals" 
                             DisplayMemberPath="SignalName" 
                             SelectedValuePath="StrValue" 
                             Grid.Row="0" 
                            Grid.ColumnSpan="3"
                             ItemsSource="{Binding BaseSignals}"
                             SelectionChanged="cbbSignals_SelectionChanged"></ComboBox>
                        <TextBox x:Name="tbSelectedValue"
                            VerticalAlignment="Top"
                            AcceptsReturn="True"
                            TextWrapping="Wrap"
                            materialDesign:HintAssist.Hint="Curretn Value"
                            Grid.Row="1" Grid.ColumnSpan="3"/>
                        <Button x:Name="btnReduce" Click="btnReduce_Click" Grid.Row="2" Grid.Column="0">
                            <TextBlock Text="-"></TextBlock>
                        </Button>
                        <TextBox  materialDesign:HintAssist.Hint="加减系数" Text="{Binding AddStep}" Grid.Row="2" Grid.Column="1"></TextBox>
                        <Button x:Name="btnAdd" Click="btnAdd_Click" Grid.Row="2" Grid.Column="2">
                            <TextBlock Text="+"></TextBlock>
                        </Button>
                        <Button x:Name="btnDivid" Click="btnDivid_Click" Grid.Row="3" Grid.Column="0">
                            <TextBlock Text="/"></TextBlock>
                        </Button>
                        <TextBox materialDesign:HintAssist.Hint="乘除系数" Text="{Binding MultipStep}" Grid.Row="3" Grid.Column="1"></TextBox>
                        <Button x:Name="btnMultip" Click="btnMultip_Click" Grid.Row="3" Grid.Column="2">
                            <TextBlock Text="*"></TextBlock>
                        </Button>
                        <Button x:Name="btnSet" Click="btnSetSendFrame_Click" Grid.Row="4" Grid.ColumnSpan="3">
                            <TextBlock Text="Send"></TextBlock>
                        </Button>
                    </Grid>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="gbGet" >
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Data.FormItem.Name, Source={StaticResource DataContextProxy}}" Foreground="White" FontSize="16"></TextBlock>
                        <TextBlock Text="{Binding Data.FormItem.FormType, Source={StaticResource DataContextProxy},
                                        StringFormat='(Form Type: \{0\})',
                                        Converter={StaticResource EnumConverter},
                                        ConverterParameter={x:Type utils:FormType}}"
                                   Foreground="White" Margin="10,0,0,0"/>
                    </StackPanel>
                </TabItem.Header>
                <StackPanel 
                        Margin="0,10,0,0"
                        Orientation="Vertical" 
                        x:Name="getPanel" 
                        Grid.RowSpan="2" 
                        Background="White" 
                        MaxWidth="300">
                    <TextBox MinWidth="100" 
                                     Text="{Binding IntervalTime,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     materialDesign:HintAssist.Hint="Interval"
                                     materialDesign:TextFieldAssist.SuffixText="ms"
                                     IsReadOnly="{Binding IsGetData}">
                    </TextBox>
                    <ToggleButton Content="S"></ToggleButton>
                    <Button x:Name="btnGet" Click="btnGet_Click">
                        <TextBlock>
                            <TextBlock.Resources>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                    <Setter Property="Text" Value="Start Get"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Data.IsGetData, Source={StaticResource DataContextProxy}}" Value="True">
                                            <Setter Property="Text" Value="Stop Get Data"/>
                                            <Setter Property="Foreground" Value="REd"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Resources>
                        </TextBlock>
                    </Button>
                </StackPanel>
            </TabItem>
            <TabItem x:Name="RLSendTab">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Data.FormItem.Name, Source={StaticResource DataContextProxy}}" Foreground="White" FontSize="16"></TextBlock>
                        <TextBlock Text="{Binding Data.FormItem.FormType, Source={StaticResource DataContextProxy},
                                        StringFormat='(Form Type: \{0\})',
                                        Converter={StaticResource EnumConverter},
                                        ConverterParameter={x:Type utils:FormType}}"
                                   Foreground="White" Margin="10,0,0,0"/>
                    </StackPanel>
                </TabItem.Header>
                <StackPanel 
                        Orientation="Vertical" 
                        Margin="0,10,0,0"
                        x:Name="rlPanel" 
                        Background="White" >
                        <Grid MaxWidth="300" MaxHeight="300">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="4*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ComboBox 
                                Grid.Row="0" 
                                Grid.ColumnSpan="3"
                                x:Name="cbbRSignal"
                                materialDesign:HintAssist.Hint="Signal Name" 
                                DisplayMemberPath="SignalName" 
                                SelectedValuePath="StrValue" 
                                ItemsSource="{Binding BaseSignals}" SelectionChanged="cbbRSignal_SelectionChanged"
                                ></ComboBox>
                            <TextBox
                                Grid.Row="1" Grid.ColumnSpan="2"
                                VerticalAlignment="Top"
                                AcceptsReturn="True"
                                TextWrapping="Wrap"
                                materialDesign:HintAssist.Hint="Curretn Value"
                                x:Name="selectedValueRL"
                                />
                        <Button Grid.Column="2" Grid.Row="1"
                                x:Name="btnRLSet" 
                                Click="btnSetValue_Click" 
                                Grid.ColumnSpan="3">
                            <TextBlock Text="GO"></TextBlock>
                        </Button>
                        <Button 
                                x:Name="btnRLReduce" 
                                Click="btnRLReduce_Click" 
                                Grid.Row="2" 
                                Grid.Column="0">
                                <TextBlock Text="-"></TextBlock>
                            </Button>
                            <TextBox 
                                Grid.Row="2" 
                                Grid.Column="1"  
                                materialDesign:HintAssist.Hint="加减系数" 
                                Text="{Binding AddStep}"
                                ></TextBox>
                            <Button 
                                x:Name="btnRLAdd" 
                                Click="btnRLAdd_Click"
                                Grid.Row="2" 
                                Grid.Column="2">
                                <TextBlock Text="+"></TextBlock>
                            </Button>
                            <Button 
                                x:Name="btnRLDivid" 
                                Click="btnRLDivid_Click"
                                Grid.Row="3" 
                                Grid.Column="0">
                                <TextBlock Text="/"></TextBlock>
                            </Button>
                            <TextBox 
                                materialDesign:HintAssist.Hint="乘除系数" 
                                Grid.Row="3" 
                                Grid.Column="1"
                                Text="{Binding MultipStep}"></TextBox>
                            <Button 
                                x:Name="btnRLMultip" 
                                Click="btnRLMultip_Click"
                                Grid.Row="3" 
                                Grid.Column="2">
                                <TextBlock Text=" *"></TextBlock>
                            </Button>
                           
                            <Button 
                                x:Name="btnSendRolling" 
                                Click="btnSendRolling_Click" 
                                Grid.Row="4" 
                                Grid.ColumnSpan="3">
                            <TextBlock>
                                <TextBlock.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                        <Setter Property="Text" Value="Start Send"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Data.RLStart, Source={StaticResource DataContextProxy}}" Value="True">
                                                <Setter Property="Text" Value="Stop Send Data"/>
                                                <Setter Property="Foreground" Value="REd"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Resources>
                            </TextBlock>
                        </Button>
                    </Grid>
                </StackPanel>

            </TabItem>
        </TabControl>
        <TabControl 
                Style="{StaticResource MaterialDesignFilledTabControl}" Grid.Row="1" Grid.ColumnSpan="2"
                Margin="10">
            <TabItem Header="Data">
                <DataGrid x:Name="gdData" 
                                      ItemsSource="{Binding BaseSignals,UpdateSourceTrigger=PropertyChanged}" 
                                      CanUserAddRows="False" 
                                      AutoGenerateColumns="False" 
                                      HeadersVisibility="All">
                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <!--<Setter Property="Foreground" 
                                    Value="{Binding RelativeSource={RelativeSource Self},
                                    Path=Item,Converter={StaticResource ColorConverter}}"/>-->
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource mutColorConverter}">
                                        <Binding Path="DValue" UpdateSourceTrigger="PropertyChanged"/>
                                        <Binding Path="Minimum"/>
                                        <Binding Path="Maximum"/>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ToolTip" Value=""/>
                            <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
                            <Setter Property="ToolTipService.ShowDuration" Value="20000"/>
                            <Setter Property="ToolTipService.HasDropShadow" Value="True"/>
                            <Setter Property="ToolTipService.Placement" Value="Bottom"/>
                            <Setter Property="ToolTipService.HorizontalOffset" Value="20"/>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Resources>
                        <Style TargetType="ToolTip">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Border Background="White"
                                                BorderThickness="2"
                                                BorderBrush="AliceBlue"
                                                CornerRadius="5"
                                                Padding="5">
                                            <StackPanel Height="auto" Width="200">
                                                <TextBlock TextWrapping="NoWrap" MaxWidth="200" LineHeight="26" Margin="5,5,5,5">
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="Min:{0};Max:{1}">
                                                            <Binding Path="Minimum"/>
                                                            <Binding Path="Maximum"/>
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                                <TextBlock TextWrapping="NoWrap" MaxWidth="200" LineHeight="26"  Margin="5,5,5,5">
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="StartBit:{0};Length:{1}">
                                                            <Binding Path="StartBit"/>
                                                            <Binding Path="Length"/>
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </StackPanel>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="更改信号" x:Name="btnChangeSignals" Click="btnChangeSignals_Click"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn
                                      Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}"
                                      ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                      EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                            <DataGridCheckBoxColumn.Header>
                                <Border
                                            Background="Transparent">
                                    <CheckBox IsChecked="{Binding Data.IsAllSignalsSelected, Source={StaticResource DataContextProxy}}" />
                                </Border>
                            </DataGridCheckBoxColumn.Header>
                            <DataGridCheckBoxColumn.HeaderStyle>
                                <Style
                                                TargetType="{x:Type DataGridColumnHeader}"
                                                BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                    <Setter
                                                    Property="HorizontalContentAlignment"
                                                    Value="Center" />
                                </Style>
                            </DataGridCheckBoxColumn.HeaderStyle>
                        </DataGridCheckBoxColumn>
                        <DataGridTextColumn
                                        Binding="{Binding MessageID}"
                                        Header="MessageID"
                                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" 
                                        IsReadOnly="True"/>
                        <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                        <materialDesign:DataGridTextColumn 
                                        Header="Name" 
                                        Binding="{Binding SignalName}"
                                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                        IsReadOnly="True">
                        </materialDesign:DataGridTextColumn>
                        <materialDesign:DataGridTextColumn 
                                        Binding="{Binding DValue,UpdateSourceTrigger=PropertyChanged}" 
                                        Header="StrValue"
                                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" 
                                        IsReadOnly="{Binding Data.ISReadOnly, Source={StaticResource DataContextProxy}}"
                                        >

                            <!--EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"-->
                        </materialDesign:DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </TabControl>

    </Grid>

</UserControl>
